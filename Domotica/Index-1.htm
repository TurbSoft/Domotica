#include <WiFi.h>
#include <WebServer.h>
#include <ESP32Servo.h>

// ðŸ”¹ Configura tu WiFi
const char* ssid = "TECNO";
const char* password = "21072705..";

// ðŸ”¹ Pines definidos
#define PIN_LUZ      23
#define PIN_RESPALDO 25
#define PIN_PUERTA   27

// ðŸ”¹ Objetos servo
Servo servoRespaldo;
Servo servoPuerta;

// ðŸ”¹ Servidor web
WebServer server(80);

// PÃ¡gina web
const char index_html[] PROGMEM = R"rawliteral(
<!DOCTYPE html>
<html lang="es">
<head>
 <meta charset="UTF-8" />
 <title>Control DomÃ³tico ESP32</title>
 <style>
   body { font-family: Arial; text-align: center; margin-top: 30px; }
   .section { margin: 20px; }
   button { padding: 12px 25px; margin: 8px; font-size: 16px; }
 </style>
</head>
<body>
 <h1>Control DomÃ³tico ESP32</h1>

 <div class="section">
   <h2>Luz</h2>
   <button onclick="fetch('/encenderLuz')">Encender Luz</button>
   <button onclick="fetch('/apagarLuz')">Apagar Luz</button>
 </div>

 <div class="section">
   <h2>Cama - Respaldo</h2>
   <button onclick="fetch('/respaldo/90')">Mover a 90Â°</button>
   <button onclick="fetch('/respaldo/60')">Mover a 60Â°</button>
   <button onclick="fetch('/respaldo/45')">Mover a 45Â°</button>
   <button onclick="fetch('/respaldo/0')">Mover a 0Â°</button>
 </div>

 <div class="section">
   <h2>Puerta</h2>
   <button onclick="fetch('/puerta/abrir')">Abrir Puerta</button>
   <button onclick="fetch('/puerta/cerrar')">Cerrar Puerta</button>
 </div>

</body>
</html>
)rawliteral";

void setup() {
  Serial.begin(115200);

  // Pines
  pinMode(PIN_LUZ, OUTPUT);

  // Servos
  servoRespaldo.attach(PIN_RESPALDO);
  servoPuerta.attach(PIN_PUERTA);

  // WiFi
  WiFi.begin(ssid, password);
  Serial.println("Conectando a WiFi...");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.print("\nâœ… Conectado. IP: ");
  Serial.println(WiFi.localIP());

  // Rutas del servidor
  server.on("/", []() { server.send(200, "text/html", index_html); });

  server.on("/encenderLuz", []() {
    digitalWrite(PIN_LUZ, HIGH);
    server.send(200, "text/plain", "ðŸ’¡ Luz encendida");
  });

  server.on("/apagarLuz", []() {
    digitalWrite(PIN_LUZ, LOW);
    server.send(200, "text/plain", "ðŸ’¡ Luz apagada");
  });

  server.on("/respaldo/90", []() { servoRespaldo.write(90); server.send(200, "text/plain", "Respaldo a 90Â°"); });
  server.on("/respaldo/60", []() { servoRespaldo.write(60); server.send(200, "text/plain", "Respaldo a 60Â°"); });
  server.on("/respaldo/45", []() { servoRespaldo.write(45); server.send(200, "text/plain", "Respaldo a 45Â°"); });
  server.on("/respaldo/0",  []() { servoRespaldo.write(0);  server.send(200, "text/plain", "Respaldo a 0Â°"); });

  server.on("/puerta/abrir", []() { servoPuerta.write(90); server.send(200, "text/plain", "Puerta abierta ðŸšª"); });
  server.on("/puerta/cerrar", []() { servoPuerta.write(0);  server.send(200, "text/plain", "Puerta cerrada ðŸšª"); });

  // Inicia servidor
  server.begin();
  Serial.println("Servidor web iniciado ðŸš€");
}

void loop() {
  server.handleClient();
}
